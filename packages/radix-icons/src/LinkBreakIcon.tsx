import * as React from 'react';
import { BaseIconProps } from './types';

interface LinkBreakIconProps extends BaseIconProps {
  size?: '15';
  type?: 'outline';
}

export const LinkBreakIcon = ({
  color = 'currentColor',
  size = '15',
  type = 'outline',
  ...props
}: LinkBreakIconProps) => {
  if (type === 'outline' && size === '15') {
    return (
      <svg width="15" height="15" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
        <path
          d="M4.5 0a.5.5 0 01.5.5v2a.5.5 0 11-1 0v-2a.5.5 0 01.5-.5zM12 10.5a.5.5 0 01.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zM10.5 12a.5.5 0 01.5.5v2a.5.5 0 11-1 0v-2a.5.5 0 01.5-.5zm2.353.146a.5.5 0 00-.707.707l1.5 1.5a.5.5 0 10.707-.707l-1.5-1.5zM1.353.646a.5.5 0 00-.707.708l1.5 1.5a.5.5 0 10.708-.708l-1.5-1.5zM0 4.5A.5.5 0 01.5 4h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm2.992 2.558l-.043.043c-.37.37-.606.606-.771.85-.676.993-.71 2.287-.06 3.277.158.241.39.472.74.824l.046.044.044.045c.351.351.582.582.824.74.99.651 2.284.616 3.278-.059.243-.165.48-.402.849-.771l.043-.043.618-.619a.5.5 0 00-.707-.707l-.619.619c-.427.427-.592.589-.746.694-.677.46-1.532.468-2.167.051-.144-.095-.299-.245-.71-.657-.412-.412-.563-.566-.657-.71-.418-.636-.409-1.49.05-2.167.106-.154.268-.32.695-.747l.619-.619a.5.5 0 10-.707-.707l-.62.62zM7.765 3.7c.427-.427.592-.589.747-.694.676-.46 1.531-.468 2.166-.051.145.095.299.245.71.657.412.412.563.566.658.71.417.636.408 1.49-.052 2.167-.104.154-.267.32-.694.747l-.619.619a.5.5 0 00.708.707l.618-.62.043-.042c.37-.37.606-.606.772-.85.675-.993.71-2.287.06-3.277-.16-.241-.39-.472-.742-.823l-.044-.045-.045-.045c-.351-.351-.582-.582-.824-.74-.99-.651-2.283-.616-3.277.06-.243.164-.48.4-.85.77l-.042.043-.619.619a.5.5 0 00.707.707l.619-.619z"
          fill={color}
          fillRule="evenodd"
          clipRule="evenodd"
        />
      </svg>
    );
  }

  console.error(`LinkBreakIcon doesn't support the combination of ${size} and ${type}`);
  return null;
};

export default LinkBreakIcon;
